@page
@model StudentHousing.Web.Pages.Housing.PropertyModalModel
@using Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.TagHelpers.Modal
@using Microsoft.AspNetCore.Authorization
@using StudentHousing.Permissions
@inject IAuthorizationService AuthService
@{
    Layout = null;
}
@section scripts{
    <abp-script src='/Pages/Housing/Index.js'></abp-script>
    <abp-script src='/js/slideshow.js'></abp-script>
}

<style>
    * {
        box-sizing: border-box
    }

    /* Slideshow container */
    .slideshow-container {
        max-width: 1000px;
        position: relative;
        margin: auto;
    }

    /* Hide the images by default */
    .mySlides {
        display: none;
    }

    /*.mySlides img {
        max-height: 500px;
        min-height: 500px;
    }*/

    /* Next & previous buttons */
    .prev, .next {
        cursor: pointer;
        position: absolute;
        top: 50%;
        width: auto;
        margin-top: -22px;
        padding: 16px;
        color: white;
        font-weight: bold;
        font-size: 18px;
        transition: 0.6s ease;
        border-radius: 0 3px 3px 0;
        user-select: none;
    }

    /* Position the "next button" to the right */
    .next {
        right: 0;
        border-radius: 3px 0 0 3px;
        background-color: black;
        opacity: 0.2;
    }

    .prev {
        background-color: black;
        opacity: 0.2;
    }

        /* On hover, add a black background color with a little bit see-through */
        .prev:hover, .next:hover {
            background-color: rgba(0,0,0,0.8);
            opacity: 1;
        }

    /* Caption text */
    .text {
        color: #f2f2f2;
        font-size: 15px;
        padding: 8px 12px;
        position: absolute;
        bottom: 8px;
        width: 100%;
        text-align: center;
    }

    /* Number text (1/3 etc) */
    .numbertext {
        color: #f2f2f2;
        font-size: 12px;
        padding: 8px 12px;
        position: absolute;
        top: 0;
    }

    /* The dots/bullets/indicators */
    .dot {
        cursor: pointer;
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbb;
        border-radius: 50%;
        display: inline-block;
        /*transition: background-color 0.6s ease;*/
    }

        .active, .dot:hover {
            background-color: #717171;
        }

    /* Fading animation */
    .fade {
        /*    animation-name: fade;
        animation-duration: 1.5s;*/
    }

    @@keyframes fade {
        from {
            opacity: .4
        }

        to {
            opacity: 1
        }
    }

</style>

@using (Html.BeginForm("PropertyModal", "Housing", FormMethod.Post, new { autocomplete = "off", enctype = "multipart/form-data" }))
{
    @if (Model.PropertyId.HasValue)
    {
        @Html.HiddenFor(z => z.Property.Id)
        @Html.HiddenFor(z => z.PropertyId)
        @Html.HiddenFor(z => z.Property.CreationTime)
        @Html.HiddenFor(z => z.Property.CreatorId)
    }

    <abp-modal size=ExtraLarge centered=true>
        <abp-modal-header title='@(Model.PropertyId.HasValue? $"Edit Property: {Model.Property.Name}" : "New Property")'></abp-modal-header>
        <abp-modal-body>
            @if (!Model.PropertyId.HasValue)
            {
                @*create*@
                <abp-form-row>
                    <abp-column size="_12">
                        <abp-input asp-for="@Model.Property.Name" label="Property Name"></abp-input>
                    </abp-column>
                    <abp-column size="_12">
                        <abp-input asp-for="@Model.Property.Description" label="Property Description"></abp-input>
                    </abp-column>
                    <abp-column size="_12">
                        <abp-input asp-for="@Model.Property.MonthlyPrice" label="Property Monthly Price"></abp-input>
                    </abp-column>
                    <abp-column size="_12">
                        <abp-input asp-for="@Model.Property.PropertyAddress" label="Property Address"></abp-input>
                    </abp-column>
                    <abp-column size="_12">
                        <label>Property Images</label><br>
                        <input type="file" multiple name="PropertyPhotos" accept="image/*" />
                    </abp-column>
                </abp-form-row>
            }
            else
            {
                @*update*@
                @if (await AuthService.IsGrantedAsync(StudentHousingPermissions.Housing.Update))
                {
                    <abp-form-row>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.Property.Name" label="Property Name"></abp-input>
                        </abp-column>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.Property.Description" label="Property Description"></abp-input>
                        </abp-column>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.Property.MonthlyPrice" label="Property Monthly Price"></abp-input>
                        </abp-column>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.Property.PropertyAddress" label="Property Address"></abp-input>
                        </abp-column>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.DistanceInKm" disabled label="Distance From University in Km"></abp-input>
                        </abp-column>
                        @if (Model.Property.RegistrationNumbers != null && Model.Property.RegistrationNumbers.Any())
                        {
                            <abp-column>
                                <label><b>Registration Numbers:</b></label><br>
                                @for (var i = 0; i < Model.Property.RegistrationNumbers.Count; i++)
                                {
                                    if (i == Model.Property.RegistrationNumbers.Count - 1)
                                    {
                                        <span style="display:inline;">@Model.Property.RegistrationNumbers[i].Number</span>
                                    }
                                    else
                                    {
                                        <span style="display:inline;">@Model.Property.RegistrationNumbers[i].Number, </span>
                                    }
                                }
                                <br><br>
                            </abp-column>
                        }
                        <abp-column size="_12">
                            <label>Property Images</label><br>
                            <input type="file" multiple name="PropertyPhotos" accept="image/*" />
                        </abp-column>
                    </abp-form-row>
                }
                else
                {
                    <abp-form-row>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.Property.Name" disabled label="Property Name"></abp-input>
                        </abp-column>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.Property.Description" disabled label="Property Description"></abp-input>
                        </abp-column>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.Property.MonthlyPrice" disabled label="Property Monthly Price"></abp-input>
                        </abp-column>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.Property.PropertyAddress" disabled label="Property Address"></abp-input>
                        </abp-column>
                        <abp-column size="_12">
                            <abp-input asp-for="@Model.DistanceInKm" disabled label="Distance From University in Km"></abp-input>
                        </abp-column>
                        @if (Model.Property.RegistrationNumbers != null && Model.Property.RegistrationNumbers.Any())
                        {
                            <abp-column>
                                @for (var i = 0; i < Model.Property.RegistrationNumbers.Count; i++)
                                {
                                    <span style="display:inline; margin-right: 5px;">@Model.Property.RegistrationNumbers[i].Number</span>
                                }
                            </abp-column>
                        }
                    </abp-form-row>
                }

                <!-- Slideshow container -->
                <div class="slideshow-container">

                    <!-- Full-width images with number and caption text -->
                    @{
                        for (var i = 0; i < Model.Property?.Attachments?.Count; i++)
                        {
                            <div class="mySlides">
                                <div class="numbertext">@(i + 1) / @(Model.Property?.Attachments?.Count)</div>
                                <img src="@Model.Property?.Attachments[i].Url" style="width:100%">
                                <div class="text"></div>
                            </div>
                        }
                    }


                    <!-- Next and previous buttons -->
                    <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
                    <a class="next" onclick="plusSlides(1)">&#10095;</a>
                </div>
                <br>

                <!-- The dots/circles -->
                <div style="text-align:center">
                    @{
                        for (var i = 0; i < Model.Property?.Attachments?.Count; i++)
                        {
                            <span class="dot" onclick="currentSlide(@(i+1))"></span>
                        }
                    }
                </div>
            }
        </abp-modal-body>
        @if (await AuthService.IsGrantedAsync(StudentHousingPermissions.Housing.Update))
        {
            <abp-modal-footer buttons="@(AbpModalButtons.Cancel|AbpModalButtons.Save)"></abp-modal-footer>
        }
    </abp-modal>
}